{"/fredric.net/about/":{"data":{"":"Hextra is designed to be a simple, fast, and flexible theme for building modern static websites. It is especially well-suited for documentation websites but can also be used for various types of sites, such as blogs, portfolios, and more.\nHugo, like Jekyll, is a static site generator. What sets Hugo apart is that it is a single binary, making it easy to install and run on various platforms. It is also extremely fast and reliable, capable of rendering a site with thousands of pages in milliseconds.\nHextra is built with a mindset focused on having a minimal footprint. To get started, no extra dependencies like Node.js packages are required; all you need is a single YAML configuration file, along with your Markdown content. Thus, we can focus on writing quality content instead of setting up tooling.","credits#Credits":"Hextra cannot be built without the following tools and inspirations:\nHugo Tailwind CSS Heroicons Nextra Next.js"},"title":"About"},"/fredric.net/blog/":{"data":{"":"Welcome to my blog! Here you‚Äôll find my latest thoughts and articles."},"title":"Blog"},"/fredric.net/blog/first-post/":{"data":{"":"This is the content of my very first blog post. I‚Äôm excited to share my thoughts and ideas here!","conclusion#Conclusion":"I hope you enjoyed this first post. Stay tuned for more updates and articles!","getting-started#Getting Started":"To begin, you need to install Hugo and set up your project. Once that‚Äôs done, you can choose a theme like Hextra to give your site a great look and feel.","introduction#Introduction":"Welcome to my new blog! In this post, I‚Äôll be talking about getting started with Hugo and the Hextra theme. It‚Äôs a powerful combination for building fast and beautiful websites."},"title":"My First Blog Post"},"/fredric.net/blog/second-post/":{"data":{"":"In this post, we‚Äôll dive deeper into some of the cool features offered by the Hextra theme.","customization#Customization":"The theme is highly customizable, allowing you to change colors, fonts, and layouts to match your brand.","dark-mode#Dark Mode":"One of my favorite features is the built-in dark mode. It‚Äôs easy on the eyes and gives your site a modern feel.","responsive-design#Responsive Design":"Hextra is built with a responsive design, meaning your website will look great on any device, from desktops to mobile phones."},"title":"Exploring Hextra Theme Features"},"/fredric.net/blog/third-post/":{"data":{"":"Creating engaging and informative content is key to a successful blog. Here are some tips to help you out.","call-to-action#Call to Action":"Encourage your readers to interact. Ask questions, invite comments, or direct them to other relevant resources.","know-your-audience#Know Your Audience":"Before you start writing, understand who you‚Äôre writing for. Tailor your language and topics to their interests and needs.","structure-your-posts#Structure Your Posts":"Use headings, subheadings, and bullet points to break up your content. This makes it easier to read and digest."},"title":"Tips for Writing Great Content"},"/fredric.net/docs/":{"data":{"":"üëã Hello! Welcome to the Hextra documentation!","features#Features":"Beautiful Design - Inspired by Nextra, Hextra utilizes Tailwind CSS to offer a modern design that makes your site look outstanding. Responsive Layout and Dark Mode - It looks great on all devices, from mobile, tablet to desktop. Dark mode is also supported to accommodate various lighting conditions. Fast and Lightweight - Powered by Hugo, a lightning-fast static-site generator housed in a single binary file, Hextra keeps its footprint minimal. No JavaScript or Node.js are needed to use it. Full-text Search - Built-in offline full-text search powered by FlexSearch, no additional configuration required. Battery-included - Markdown, syntax highlighting, LaTeX math formulae, diagrams and Shortcodes elements to enhance your content. Table of contents, breadcrumbs, pagination, sidebar navigation and more are all automatically generated. Multi-language and SEO Ready - Multi-language sites made easy with Hugo‚Äôs multilingual mode. Out-of-the-box support is included for SEO tags, Open Graph, and Twitter Cards.","next#Next":"Dive right into the following section to get started:\nGetting StartedLearn how to create website using Hextra","questions-or-feedback#Questions or Feedback?":"‚ùì Hextra is still in active development. Have a question or feedback? Feel free to open an issue!","what-is-hextra#What is Hextra?":"Hextra is a modern, fast and batteries-included Hugo theme built with Tailwind CSS. Designed for building beautiful websites for documentation, blogs, and websites, it provides out-of-the-box features and flexibility to meet various requirements."},"title":"Documentation"},"/fredric.net/docs/advanced/":{"data":{"":"This section covers some advanced topics of the theme.\nMulti-language Customization Comments System"},"title":"Advanced"},"/fredric.net/docs/advanced/comments/":{"data":{"":"Hextra supports adding comments system to your site. Currently giscus is supported.","giscus#giscus":"giscus is a comments system powered by GitHub Discussions. It is free and open source.\nTo enable giscus, you need to add the following to the site configuration file:\nhugo.yamlparams: comments: enable: false type: giscus giscus: repo: repoId: category: categoryId: The giscus configurations can be constructed from the giscus.app website. More details can also be found there.\nComments can be enabled or disabled for a specific page in the page front matter:\ncontent/docs/about.md--- title: About comments: true ---"},"title":"Comments"},"/fredric.net/docs/advanced/customization/":{"data":{"":"Hextra offers some default customization options in the hugo.yaml config file to configure the theme. This page describes the available options and how to customize the theme further.","badge#Badge":"hextra-badge - The badge element","card#Card":"hextra-card - The card element hextra-card-image - The card image element hextra-card-icon - The card icon element hextra-card-subtitle - The card subtitle element","cards#Cards":"hextra-cards - The cards grid container","code-block#Code Block":"hextra-code-block - The code block container hextra-code-filename - The filename element for code blocks","code-copy-button#Code Copy Button":"hextra-code-copy-btn-container - The code copy button container hextra-code-copy-btn - The code copy button hextra-copy-icon - The copy icon element hextra-success-icon - The success icon element","component-layout-variables#Component Layout Variables":"Hextra provides CSS variables to customize the width of pages, navbar, and footer:\nassets/css/custom.css:root { /* Page width - also configurable via hugo.yaml params.page.width */ --hextra-max-page-width: 80rem; /* default: 80rem (normal), 90rem (wide), 100% (full) */ /* Navbar width - also configurable via hugo.yaml params.navbar.width */ --hextra-max-navbar-width: 90rem; /* independent navbar width */ /* Footer width - also configurable via hugo.yaml params.footer.width */ --hextra-max-footer-width: 80rem; /* independent footer width */ }","custom-css#Custom CSS":"To add custom CSS, we need to create a file assets/css/custom.css in our site. Hextra will automatically load this file.","custom-extra-section-in-footer#Custom Extra Section in Footer":"You can add extra section in the footer by creating a file layouts/_partials/custom/footer.html in your site.\nlayouts/_partials/custom/footer.html The added section will be added before the copyright section in the footer. You can use HTML and Hugo template syntax to add your own content.\nHugo variables available in the footer section are: .switchesVisible and .displayCopyright.","custom-layouts#Custom Layouts":"The layouts of the theme can be overridden by creating a file with the same name in the layouts directory of your site. For example, to override the single.html layout for docs, create a file layouts/docs/single.html in your site.\nFor further information, refer to the Hugo Templates.","custom-scripts#Custom Scripts":"You may add custom scripts to the end of the head for every page by adding the following file:\nlayouts/_partials/custom/head-end.html","feature-card#Feature Card":"hextra-feature-card - The feature card link element","feature-grid#Feature Grid":"hextra-feature-grid - The feature grid container","filetree#Filetree":"hextra-filetree - The filetree container","folder#Folder":"hextra-filetree-folder - The filetree folder container","font-family#Font Family":"The font family of the content can be customized using:\nassets/css/custom.css.content { font-family: \"Times New Roman\", Times, serif; }","footer#Footer":"hextra-footer - The footer element hextra-custom-footer - The custom footer section container","further-customization#Further Customization":"Didn‚Äôt find what you were looking for? Feel free to open a discussion or make a contribution to the theme!","further-theme-customization#Further Theme Customization":"The theme can be further customized by overriding the default styles via the exposed css classes. An example for customizing the footer element:\nassets/css/custom.css.hextra-footer { /* Styles will be applied to the footer element */ } .hextra-footer:is(html[class~=\"dark\"] *) { /* Styles will be applied to the footer element in dark mode */ } The following classes can be used to customize various parts of the theme.","general#General":"hextra-scrollbar - The scrollbar element content - Page content container","inline-code-element#Inline Code Element":"The color of text mixed with other text can customized with:\nassets/css/custom.css.content code:not(.code-block code) { color: #c97c2e; }","jupyter-notebook#Jupyter Notebook":"hextra-jupyter-code-cell - The Jupyter code cell container hextra-jupyter-code-cell-outputs-container - The Jupyter code cell outputs container hextra-jupyter-code-cell-outputs - The Jupyter code cell output div element","language-switcher#Language Switcher":"hextra-language-switcher - The language switcher button hextra-language-options - The language options container","navbar#Navbar":"hextra-nav-container - The navbar container hextra-nav-container-blur - The navbar container in blur element hextra-hamburger-menu - The hamburger menu button","pdf#PDF":"hextra-pdf - The PDF container element","primary-color#Primary Color":"The primary color of the theme can be customized by setting the --primary-hue, --primary-saturation and --primary-lightness variables:\nassets/css/custom.css:root { --primary-hue: 100deg; --primary-saturation: 90%; --primary-lightness: 50%; }","search#Search":"hextra-search-wrapper - The search wrapper container hextra-search-input - The search input element hextra-search-results - The search results list container Optional nested classes used within the search UI:\nhextra-search-title - The result title element hextra-search-active - The active result anchor hextra-search-no-result - The empty state element hextra-search-prefix - The breadcrumb/prefix label for grouped results hextra-search-excerpt - The result snippet text hextra-search-match - The highlighted query span","shortcodes#Shortcodes":"","sidebar#Sidebar":"hextra-sidebar-container - The sidebar container hextra-sidebar-active-item - The active item in the sidebar","steps#Steps":"hextra-steps - The steps container","syntax-highlighting#Syntax Highlighting":"List of available syntax highlighting themes are available at Chroma Styles Gallery. The stylesheet can be generated using the command:\nhugo gen chromastyles --style=github To override the default syntax highlighting theme, we can add the generated styles to the custom CSS file.","table-of-contents#Table of Contents":"hextra-toc - The table of contents container","tabs#Tabs":"hextra-tabs-panel - The tabs panel container hextra-tabs-toggle - The tabs toggle button","tailwind-theme-variables#Tailwind Theme Variables":"Starting with Hextra v0.10.0, which is built on Tailwind CSS v4, you can customize the theme by overriding CSS variables inside the @layer theme block.\nThis lets you customize the global look and feel without having to modify every individual class.\nassets/css/custom.css@layer theme { :root { --hx-default-mono-font-family: \"JetBrains Mono\", monospace; } } Check out Tailwind Theme Variables documentation for details.","theme-toggle#Theme Toggle":"hextra-theme-toggle - The theme toggle button"},"title":"Customization"},"/fredric.net/docs/advanced/multi-language/":{"data":{"":"Hextra supports creating site with multiple languages using Hugo‚Äôs multilingual mode.","enable-multi-language#Enable Multi-language":"To make our site multi-language, we need to tell Hugo the supported languages. We need to add to the site configuration file:\nhugo.yamldefaultContentLanguage: en languages: en: languageName: English weight: 1 fr: languageName: Fran√ßais weight: 2 ja: languageName: Êó•Êú¨Ë™û weight: 3","manage-translations-by-filename#Manage Translations by Filename":"Hugo supports managing translations by filename. For example, if we have a file content/docs/_index.md in English, we can create a file content/docs/_index.fr.md for French translation.\ncontent docs _index.md _index.fr.md _index.ja.md Note: Hugo also supports Translation by content directory.","read-more#Read More":"Hugo Multilingual Mode Hugo Multilingual Part 1: Content translation Hugo Multilingual Part 2: Strings localization","translate-menu-items#Translate Menu Items":"To translate menu items in the navigation bar, we need to set the identifier field:\nhugo.yamlmenu: main: - identifier: documentation name: Documentation pageRef: /docs weight: 1 - identifier: blog name: Blog pageRef: /blog weight: 2 and translate them in the corresponding i18n file:\ni18n/fr.yamldocumentation: Documentation blog: Blog","translate-strings#Translate Strings":"To translate strings on the other places, we need to add the translation to the corresponding i18n file:\ni18n/fr.yamlreadMore: Lire la suite A list of strings used in the theme can be found in the i18n/en.yaml file."},"title":"Multi-language"},"/fredric.net/docs/companies/":{"data":{"":"Explore the following sections to learn how to use Hextra:\nOrganize Files Configuration Markdown Syntax Highlighting LaTeX Diagrams Shortcodes Deploy Site"},"title":"Guide"},"/fredric.net/docs/getting-started/":{"data":{"":"","add-hextra-theme-as-a-git-submodule#Add Hextra theme as a Git submodule":"Switch to the site directory and initialize a new Git repository:\ncd my-site git init Then, add Hextra theme as a Git submodule:\ngit submodule add https://github.com/imfing/hextra.git themes/hextra Configure hugo.yaml to use Hextra theme by adding the following:\ntheme: hextra","configure-hextra-theme-via-module#Configure Hextra theme via module":"# initialize hugo module cd my-site hugo mod init github.com/username/my-site # add Hextra theme hugo mod get github.com/imfing/hextra Configure hugo.yaml to use Hextra theme by adding the following:\nmodule: imports: - path: github.com/imfing/hextra","create-your-first-content-pages#Create your first content pages":"Create new content page for the home page and the documentation page:\nhugo new content/_index.md hugo new content/docs/_index.md","create-your-first-content-pages-1#Create your first content pages":"Create new content page for the home page and the documentation page:\nhugo new content/_index.md hugo new content/docs/_index.md","initialize-a-new-hugo-site#Initialize a new Hugo site":"hugo new site my-site --format=yaml","initialize-a-new-hugo-site-1#Initialize a new Hugo site":"hugo new site my-site --format=yaml","next#Next":"Explore the following sections to start adding more contents:\nOrganize Files Configuration Markdown","prerequisites#Prerequisites":"Before starting, you need to have the following software installed:\nHugo (extended version) Git Go","prerequisites-1#Prerequisites":"Before starting, you need to have the following software installed:\nHugo (extended version) Git","preview-the-site-locally#Preview the site locally":"hugo server --buildDrafts --disableFastRender Voila, your new site preview is available at http://localhost:1313/.","preview-the-site-locally-1#Preview the site locally":"hugo server --buildDrafts --disableFastRender Your new site preview is available at http://localhost:1313/.\nWhen using CI/CD for Hugo website deployment, it‚Äôs essential to ensure that the following command is executed before running the hugo command.\ngit submodule update --init Failure to run this command results in the theme folder not being populated with Hextra theme files, leading to a build failure.","quick-start-from-template#Quick Start from Template":"imfing/hextra-starter-template\nYou could quickly get started by using the above template repository.\nWe have provided a GitHub Actions workflow which can help automatically build and deploy your site to GitHub Pages, and host it for free. For more options, check out Deploy Site.\nüåê Demo ‚Üó","setup-hextra-as-git-submodule#Setup Hextra as Git submodule":"","setup-hextra-as-hugo-module#Setup Hextra as Hugo module":"","start-as-new-project#Start as New Project":"There are two main ways to add the Hextra theme to your Hugo project:\nHugo Modules (Recommended): The simplest and recommended method. Hugo modules let you pull in the theme directly from its online source. Theme is downloaded automatically and managed by Hugo.\nGit Submodule: Alternatively, add Hextra as a Git Submodule. The theme is downloaded by Git and stored in your project‚Äôs themes folder.","steps#Steps":"","steps-1#Steps":""},"title":"Getting Started"},"/fredric.net/docs/guide/":{"data":{"":"Explore the following sections to learn how to use Hextra:\nOrganize Files Configuration Markdown Syntax Highlighting LaTeX Diagrams Shortcodes Deploy Site"},"title":"Guide"},"/fredric.net/docs/guide/configuration/":{"data":{"":"Hugo reads its configuration from hugo.yaml in the root of your Hugo site. The config file is where you can configure all aspects of your site. Check out the config file for this site docs/hugo.yaml on GitHub to get a comprehensive idea of available settings and best practices.","additional-formats#Additional Formats":"While favicon.ico is generally for older browsers, modern browsers support SVG favicons which are preferred for their scalability and small file size. Use tools like favicon.io or favycon to generate additional favicon formats if needed.","analytics#Analytics":"Hextra has support for several different analytics solutions. Hextra only supports analytics in production environments. This is to ensure that you do not accidentally send analytic events when working locally. If, however, you do want to test analytics locally, you can run a production server using:\nhugo server --environment production","banner#Banner":"To add a banner to your site, add the following to your hugo.yaml:\nparams: banner: key: 'announcement-xxx' message: | üéâ Welcome! [Hextra](https://github.com/hextra/hextra) is a static site generator that helps you build modern websites. The banner will be displayed on all pages.\nThe field message supports Markdown syntax.\nIf you want to use template syntax, you can define the partial in layouts/_partials/custom/banner.html. In this case, the field message will be ignored.","basic-setup#Basic Setup":"At minimum, include favicon.svg in your static folder. This will be used as the default favicon for your site.\nYou can create an adaptive SVG favicon that responds to system theme preferences by using CSS media queries within the SVG itself, following the approach described in Building an Adaptive Favicon.","copyright#Copyright":"To modify the copyright text displayed in your website‚Äôs footer, you‚Äôll need to create a file named i18n/en.yaml. In this file, specify your new copyright text as shown below:\ni18n/en.yamlcopyright: \"¬© 2024 YOUR TEXT HERE\" For your reference, an example i18n/en.yaml file can be found in the GitHub repository. Additionally, you could use Markdown format in the copyright text.","dark-mode-support#Dark Mode Support":"For enhanced dark mode support, add favicon-dark.svg to your static folder alongside favicon.svg. When both files are present, Hextra will automatically:\nUse favicon.svg for light mode or when no theme preference is detected Switch to favicon-dark.svg when the user‚Äôs system is set to dark mode Respect the system‚Äôs prefers-color-scheme setting for automatic switching The dark mode favicon switching works across all modern browsers, including Firefox, and provides a seamless experience that matches your site‚Äôs theme.","external-link-decoration#External Link Decoration":"Adds an arrow icon to external links (default: false) when rendering links from Markdown.\nparams: externalLinkDecoration: true","extra-links#Extra Links":"Sidebar extra links are defined under the menu.sidebar section in the config file:\nhugo.yamlmenu: sidebar: - name: More params: type: separator weight: 1 - name: \"About\" pageRef: \"/about\" weight: 2 - name: \"Hugo Docs ‚Üó\" url: \"https://gohugo.io/documentation/\" weight: 3","favicon#Favicon":"To customize the favicon for your site, place icon files under the static folder to override the default favicons from the theme:\nstatic android-chrome-192x192.png android-chrome-512x512.png apple-touch-icon.png favicon-16x16.png favicon-32x32.png favicon-dark.svg favicon.ico favicon.svg site.webmanifest","flexsearch-index#FlexSearch Index":"Full-text search powered by FlexSearch is enabled by default. To customize the search index, set the params.search.flexsearch.index parameter in the config file:\nhugo.yamlparams: # Search search: enable: true type: flexsearch flexsearch: # index page by: content | summary | heading | title index: content Options for flexsearch.index:\ncontent - full content of the page (default) summary - summary of the page, see Hugo Content Summaries for more details heading - level 1 and level 2 headings title - only include the page title To customize the search tokenize, set the params.search.flexsearch.tokenize parameter in the config file:\nhugo.yamlparams: search: # ... flexsearch: # full | forward | reverse | strict tokenize: forward Options for flexsearch.tokenize:\nstrict - index whole words forward - incrementally index words in forward direction reverse - incrementally index words in both directions full - index every possible combination To exclude a page from the FlexSearch search index, set the excludeSearch: true in the front matter of the page:\ncontent/docs/guide/configuration.md--- title: Configuration excludeSearch: true ---","footer#Footer":"","goatcounter-analytics#GoatCounter Analytics":"To enable GoatCounter, set params.analytics.goatCounter.code in hugo.yaml All settings available here are mirrors of the settings described in GoatCounter settings\nhugo.yamlparams: analytics: goatCounter: code: \"ABCDE\" # Optional Settings #------------------ # disables automatic collection of data # noOnload: true # disables event binding. See more here https://www.goatcounter.com/help/events # noEvents: true # allows data collection from local addresses. Use this with a production environment to test locally # allowLocal: true # Allow data collection when a page is loaded in a frame or iframe # allowFrame: true","google-analytics#Google Analytics":"To enable Google Analytics, set services.googleAnalytics.ID flag in hugo.yaml:\nhugo.yamlservices: googleAnalytics: ID: G-MEASUREMENT_ID","google-search-index#Google Search Index":"To block Google Search from indexing a page, set noindex to true in your page frontmatter:\ntitle: Configuration (archive version) params: noindex: true To exclude an entire directory, use the cascade key in the parent _index.md file.\nNote\nTo block search crawlers, you can make a robots.txt template. However, robots.txt instructions do not necessarily keep a page out of Google search results.","hiding#Hiding":"Hiding the sidebar can be done using front matter:\ncontent/docs/guide/configuration.md--- title: Configuration sidebar: hide: true --- This will hide the main sidebar from the page, freeing up space for the main content of the page.","llmstxt-support#LLMS.txt Support":"To enable llms.txt output format for your site, which provides a structured text outline for large language models and AI agents, add the llms output format to your site‚Äôs hugo.yaml:\nhugo.yamloutputs: - home: [html] + home: [html, llms] page: [html] section: [html, rss] This will generate an llms.txt file at your site‚Äôs root containing:\nSite title and description Hierarchical listing of all sections and pages Page summaries and publication dates Direct links to all content The llms.txt file is automatically generated from your content structure and makes your site more accessible to AI tools and language models for context and reference.","logo-and-title#Logo and Title":"To modify the default logo, edit hugo.yaml and add the path to your logo file under static directory. Optionally, you can change the link that users are redirected to when clicking on your logo, as well as set the width \u0026 height of the logo in pixels.\nhugo.yamlparams: navbar: displayTitle: true displayLogo: true logo: path: images/logo.svg dark: images/logo-dark.svg link: / width: 40 height: 20","main-sidebar#Main Sidebar":"For the main sidebar, it is automatically generated from the structure of the content directory. See the Organize Files page for more details.\nTo exclude a single page from the left sidebar, set the sidebar.exclude parameter in the front matter of the page:\ncontent/docs/guide/configuration.md--- title: Configuration sidebar: exclude: true ---","matomo-analytics#Matomo Analytics":"To enable Matomo, set params.analytics.matomo.URL and params.analytics.matomo.ID flag in hugo.yaml:\nhugo.yamlparams: analytics: matomo: serverURL: \"https://example.com\" websiteID: \"94db1cb1-74f4-4a40-ad6c-962362670409\"","menu#Menu":"Top right menu is defined under the menu.main section in the config file:\nhugo.yamlmenu: main: - name: Documentation pageRef: /docs weight: 1 - name: Blog pageRef: /blog weight: 2 - name: About pageRef: /about weight: 3 - name: Search weight: 4 params: type: search - name: GitHub weight: 5 url: \"https://github.com/imfing/hextra\" params: icon: github There are different types of menu items:\nLink to a page in the site with pageRef - name: Documentation pageRef: /docs Link to an external URL with url - name: GitHub url: \"https://github.com\" Search bar with type: search - name: Search params: type: search Icon Only - name: GitHub params: icon: github Link with Icon - name: Blog params: type: link icon: rss Theme Toggle - name: Theme Toggle params: type: theme-toggle label: true # optional, default is false Language Switcher - name: Language Switcher params: type: language-switch label: true # optional, default is false icon: \"globe-alt\" # optional, default is \"translate\" These menu items can be sorted by setting the weight parameter.","navigation#Navigation":"","nested-menus#Nested Menus":"You can create dropdown menus by defining child menu items. Child menus appear when clicking on the parent menu item.\nhugo.yamlmenu: main: - identifier: sdk name: SDK - identifier: python name: Python ‚Üó url: https://python.org parent: sdk - identifier: go name: Go url: https://go.dev parent: sdk Child menu items need to specify the parent parameter with the parent‚Äôs identifier value.","open-graph#Open Graph":"To add Open Graph metadata, you can:\nadd values in the front-matter params of a page or add values in the Hugo configuration file As a page can have multiple image and video tags, place their values in an array. Other Open Graph properties can have only one value.\nPage Level Global Level mypage.md--- title: \"My Page\" params: images: - \"/images/image01.jpg\" audio: \"podcast02.mp3\" videos: - \"video01.mp4\" --- Page content. hugo.yamlparams: images: - \"/images/image01.jpg\" audio: \"podcast02.mp3\" videos: - \"video01.mp4\"","others#Others":"","page-edit-link#Page Edit Link":"To configure the page edit link, we can set the params.editURL.base parameter in the config file:\nhugo.yamlparams: editURL: enable: true base: \"https://github.com/your-username/your-repo/edit/main\" The edit links will be automatically generated for each page based on the provided url as root directory. If you want to set edit link for a specific page, you can set the editURL parameter in the front matter of the page:\ncontent/docs/guide/configuration.md--- title: Configuration editURL: \"https://example.com/edit/this/page\" ---","page-last-modification#Page Last Modification":"The date of the page‚Äôs last modification can be displayed by enabling the params.displayUpdatedDate flag. To use Git commit date as the source, enable also the enableGitInfo flag.\nTo customize the date format, set the params.dateFormat parameter. Its layout matches Hugo‚Äôs time.Format.\nhugo.yaml# Parse Git commit enableGitInfo: true params: # Display the last modification date displayUpdatedDate: true dateFormat: \"January 2, 2006\"","page-width#Page Width":"The width of the page can be customized by the params.page.width parameter in the config file:\nhugo.yamlparams: page: # full (100%), wide (90rem), normal (1280px) width: wide There are three available options: full, wide, and normal. By default, the page width is set to normal.\nSimilarly, the width of the navbar and footer can be customized by the params.navbar.width and params.footer.width parameters.","right-sidebar#Right Sidebar":"","sidebar#Sidebar":"","table-of-contents#Table of Contents":"Table of contents is automatically generated from the headings in the content file. It can be disabled by setting toc: false in the front matter of the page.\ncontent/docs/guide/configuration.md--- title: Configuration toc: false ---","tags#Tags":"To display page tags, set following flags in the config file:\nhugo.yamlparams: blog: list: displayTags: true toc: displayTags: true","theme-configuration#Theme Configuration":"Use the theme setting to configure the default theme mode and toggle button, allowing visitors to switch between light or dark mode.\nhugo.yamlparams: theme: # light | dark | system default: system displayToggle: true Options for theme.default:\nlight - always use light mode dark - always use dark mode system - sync with the operating system setting (default) The theme.displayToggle parameter allows you to display a toggle button for changing themes. When set to true, visitors can switch between light or dark mode, overriding the default setting.","umami-analytics#Umami Analytics":"To enable Umami, set params.analytics.umami.serverURL and params.analytics.umami.websiteID flag in hugo.yaml:\nhugo.yamlparams: analytics: umami: serverURL: \"https://example.com\" websiteID: \"94db1cb1-74f4-4a40-ad6c-962362670409\" # scriptName: \"script.js\" # optional (default: script.js) # https://umami.is/docs/tracker-configuration#data-host-url # hostURL: \"http://stats.example.org\" # optional # https://umami.is/docs/tracker-configuration#data-auto-track # autoTrack: \"false\" # optional # https://umami.is/docs/tracker-configuration#data-tag # domains: \"example.net,example.org\" # optional # https://umami.is/docs/tracker-configuration#data-exclude-search # tag: \"umami-eu\" # optional # https://umami.is/docs/tracker-configuration#data-exclude-hash # excludeSearch: \"true\" # optional # https://umami.is/docs/tracker-configuration#data-do-not-track # excludeHash: \"true\" # optional # https://umami.is/docs/tracker-configuration#data-domains # doNotTrack: \"true\" # optional"},"title":"Configuration"},"/fredric.net/docs/guide/deploy-site/":{"data":{"":"Hugo generates static websites, allowing for flexible hosting options. This page provides guides for deploying your Hextra site on various platforms.","cloudflare-pages#Cloudflare Pages":"Put your site source code in a Git repository (e.g. GitHub) Log in to the Cloudflare dashboard and select your account In Account Home, select Workers \u0026 Pages \u003e Create application \u003e Pages \u003e Connect to Git Select the repository, and in the Set up builds and deployments section, provide the following information: Configuration Value Production branch main Build command hugo --gc --minify Build directory public For more details, check out:\nDeploy a Hugo site. Language support and tools.","github-pages#GitHub Pages":"GitHub Pages is the recommended way to deploy and host your website for free.\nIf you bootstrap the site using hextra-starter-template, it has provided GitHub Actions workflow out-of-the-box that helps automatically deploy to GitHub Pages.\nIn your repository settings, set the Pages \u003e Build and deployment \u003e Source to GitHub Actions: By default, the above GitHub Actions workflow .github/workflows/pages.yaml assumes that the site is deploying to https://.github.io//.\nIf you are deploying to https://.github.io/ then modify the --baseURL:\n.github/workflows/pages.yaml 54 55 56 57 run: | hugo \\ --gc --minify \\ --baseURL \"https://${{ github.repository_owner }}.github.io/\" If you are deploying to your own domain, please change the --baseURL value accordingly.","netlify#Netlify":"Push your code to your Git repository (GitHub, GitLab, etc.) Import the project to Netlify If you are not using [hextra-starter-template][hextra-starter-template], configure the following manually: Configure the Build command to hugo --gc --minify Specify the Publish directory to public Add Environment variable HUGO_VERSION and set to 0.147.7, or alternatively, set it in netlify.toml file Deploy! Check Hugo on Netlify for more details.","vercel#Vercel":"Push your code to your Git repository (GitHub, GitLab, etc.) Go to Vercel Dashboard and import your Hugo project Configure the project, select Hugo as Framework Preset Override the Build Command and Install command: Set Build Command to hugo --gc --minify Set Install Command to yum install golang"},"title":"Deploy Site"},"/fredric.net/docs/guide/diagrams/":{"data":{"":"Currently, Hextra supports Mermaid for diagrams.","mermaid#Mermaid":"Mermaid is a JavaScript based diagramming and charting tool that takes Markdown-inspired text definitions and creates diagrams dynamically in the browser. For example, Mermaid can render flow charts, sequence diagrams, pie charts and more.\nUsing Mermaid in Hextra is as simple as writing a code block with language set mermaid:\n```mermaid graph TD; A--\u003eB; A--\u003eC; B--\u003eD; C--\u003eD; ``` will be rendered as:\ngraph TD; A--\u003eB; A--\u003eC; B--\u003eD; C--\u003eD; Sequence diagram:\nsequenceDiagram participant Alice participant Bob Alice-\u003e\u003eJohn: Hello John, how are you? loop Healthcheck John-\u003e\u003eJohn: Fight against hypochondria end Note right of John: Rational thoughts prevail! John--\u003e\u003eAlice: Great! John-\u003e\u003eBob: How about you? Bob--\u003e\u003eJohn: Jolly good! For more information, please refer to Mermaid Documentation."},"title":"Diagrams"},"/fredric.net/docs/guide/latex/":{"data":{"":"LaTeX math expressions are rendered using (\\KaTeX) by default. Simply start including them in your Markdown content without any manual configurations.","chemistry-expressions#Chemistry Expressions":"The mhchem extension is enabled by default, allowing you to easily render chemistry equations and formulas.\nInline: (\\ce{H2O}) is water.\nSeparate paragraph:\npage.md$$\\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-}$$ will be rendered as:\n$$\\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-}$$","configuration#Configuration":"Important\nPlease enable and configure the passthrough extension in the Hugo configuration file, so that Hugo can detect LaTeX math expressions in your Markdown content.\nhugo.yamlmarkup: goldmark: extensions: passthrough: delimiters: block: [['\\[', '\\]'], [\"$$\", \"$$\"]] inline: [['\\(', '\\)']] enable: true","display-math#Display Math":"For expressions that you want to stand on their own in a separate paragraph, use $$ delimiters.\npage.md$$F(\\omega) = \\int_{-\\infty}^{\\infty} f(t)\\, e^{-j \\omega t} \\, dt$$ will be rendered as:\n$$F(\\omega) = \\int_{-\\infty}^{\\infty} f(t), e^{-j \\omega t} , dt$$\nYou can also use LaTeX environments like aligned for multi-line expressions.\npage.md$$ \\begin{aligned} \\nabla \\cdot \\mathbf{E} \u0026= \\frac{\\rho}{\\varepsilon_0} \\\\ \\nabla \\cdot \\mathbf{B} \u0026= 0 \\\\ \\nabla \\times \\mathbf{E} \u0026= -\\frac{\\partial \\mathbf{B}}{\\partial t} \\\\ \\nabla \\times \\mathbf{B} \u0026= \\mu_0 \\left( \\mathbf{J} + \\varepsilon_0 \\frac{\\partial \\mathbf{E}}{\\partial t} \\right) \\end{aligned} $$ will be rendered as:\n$$ \\begin{aligned} \\nabla \\cdot \\mathbf{E} \u0026= \\frac{\\rho}{\\varepsilon_0} \\ \\nabla \\cdot \\mathbf{B} \u0026= 0 \\ \\nabla \\times \\mathbf{E} \u0026= -\\frac{\\partial \\mathbf{B}}{\\partial t} \\ \\nabla \\times \\mathbf{B} \u0026= \\mu_0 \\left( \\mathbf{J} + \\varepsilon_0 \\frac{\\partial \\mathbf{E}}{\\partial t} \\right) \\end{aligned} $$\nFor a list of supported functions, see KaTeX supported functions.","inline-math#Inline Math":"To include an expression within a line of text, wrap it in \\( and \\) delimiters.\npage.mdThis \\(\\sigma(z) = \\frac{1}{1 + e^{-z}}\\) is an inline expression. This ( \\sigma(z) = \\frac{1}{1 + e^{-z}} ) is an inline expression.","katex#KaTeX":"The default setup requires no configuration. Hugo fetches the KaTeX CSS from the CDN. If you need to pin a specific version of KaTeX or use local assets, you can do so in your hugo.yaml file.","math-engine#Math Engine":"KaTeX is the default engine used to render LaTeX math expressions during the build process supported by Hugo.\nThe default is KaTeX, but you can also switch to MathJax if you need features only available in MathJax.","mathjax#MathJax":"Alternatively, you can use MathJax to render math expressions:\nhugo.yamlparams: math: engine: mathjax Note\nYou can further customize MathJax (for example, adjust loader options, or change the CDN/source) by overriding the template at layouts/_partials/scripts/mathjax.html in your project. Hugo will use your version instead of the theme‚Äôs default.","override-cdn-base-url#Override CDN base URL":"hugo.yamlparams: math: engine: katex katex: base: \"https://cdn.jsdelivr.net/npm/katex@0.16.22/dist\"","usage#Usage":"You can use LaTeX for both inline expressions and for larger blocks of text.","use-local-assets#Use local assets":"You can also place the css file under assets and publish additional font files required by KaTeX.\nhugo.yamlparams: math: engine: katex katex: css: \"css/katex.min.css\" assets: - \"fonts/KaTeX_Main-Regular.woff2\" # Add other font files here It will load the KaTeX CSS file from assets/css/katex.min.css instead of downloading from CDN."},"title":"LaTeX"},"/fredric.net/docs/guide/markdown/":{"data":{"":"Hugo supports Markdown syntax for formatting text, creating lists, and more. This page will show you some of the most common Markdown syntax examples.","alerts#Alerts":"Alerts are a Markdown extension based on the blockquote syntax that you can use to emphasize critical information. GitHub-style alerts are supported. Please make sure you are using the latest version of Hextra and Hugo v0.146.0 or later.\nNote\nUseful information that users should know, even when skimming content.\nTip\nHelpful advice for doing things better or more easily.\nImportant\nKey information users need to know to achieve their goal.\nWarning\nUrgent info that needs immediate user attention to avoid problems.\nCaution\nAdvises about risks or negative outcomes of certain actions.\nMarkdown\u003e [!NOTE] \u003e Useful information that users should know, even when skimming content. \u003e [!TIP] \u003e Helpful advice for doing things better or more easily. \u003e [!IMPORTANT] \u003e Key information users need to know to achieve their goal. \u003e [!WARNING] \u003e Urgent info that needs immediate user attention to avoid problems. \u003e [!CAUTION] \u003e Advises about risks or negative outcomes of certain actions.","blockquotes#Blockquotes":"Blockquote with attribution\nDon‚Äôt communicate by sharing memory, share memory by communicating. ‚Äî Rob Pike1\nMarkdown\u003e Don't communicate by sharing memory, share memory by communicating.\n\u003e ‚Äî Rob Pike[^1] [^1]: The above quote is excerpted from Rob Pike's [talk](https://www.youtube.com/watch?v=PAAkCSZUG1c) during Gopherfest, November 18, 2015.","code-blocks#Code Blocks":"Syntax Highlighting","configuration#Configuration":"Hugo uses Goldmark for Markdown parsing. Markdown rendering can be configured in hugo.yaml under markup.goldmark. Below is the default configuration for Hextra:\nhugo.yamlmarkup: goldmark: renderer: unsafe: true highlight: noClasses: false For more configuration options, see Hugo documentation on Configure Markup.","images#Images":"Markdown![landscape](https://picsum.photos/800/600) With caption:\nLorem Picsum Markdown![landscape](https://picsum.photos/800/600 \"Lorem Picsum\") For more advanced functionality, use Hugo‚Äôs built-in Figure shortcode.","inline-markdown-within-tables#Inline Markdown within tables":"Italics Bold Code italics bold code Markdown| Italics | Bold | Code | | :-------- | :------- | :----- | | _italics_ | **bold** | `code` |","learning-resources#Learning Resources":"Markdown Guide Markdown Cheatsheet Markdown Tutorial Markdown Reference The above quote is excerpted from Rob Pike‚Äôs talk during Gopherfest, November 18, 2015.¬†‚Ü©Ô∏é","lists#Lists":"","markdown-examples#Markdown Examples":"","nested-list#Nested list":"Fruit Apple Orange Banana Dairy Milk Cheese Markdown- Fruit - Apple - Orange - Banana - Dairy - Milk - Cheese","ordered-list#Ordered List":"First item Second item Third item Markdown1. First item 2. Second item 3. Third item","styling-text#Styling Text":"Style Syntax Example Output Bold **bold text** **bold text** bold text Italic *italicized text* *italicized text* italicized text Strikethrough ~~strikethrough text~~ ~~strikethrough text~~ strikethrough text Subscript This is a subscript text This is a subscript text Superscript This is a superscript text This is a superscript text","tables#Tables":"Tables aren‚Äôt part of the core Markdown spec, but Hugo supports them out-of-the-box.\nName Age Bob 27 Alice 23 Markdown| Name | Age | | :---- | :-- | | Bob | 27 | | Alice | 23 |","task-list#Task list":"Write documentation Review code Deploy changes Markdown- [x] Write documentation - [ ] Review code - [ ] Deploy changes","unordered-list#Unordered List":"List item Another item And another item Markdown* List item * Another item * And another item"},"title":"Markdown"},"/fredric.net/docs/guide/organize-files/":{"data":{"":"","add-images#Add Images":"To add images, the easiest way is to put the image files in the same directory as the Markdown file. For example, add an image file image.png alongside the my-page.md file:\ncontent docs my-page.md image.png Then, we can use the following Markdown syntax to add the image to the content:\ncontent/docs/my-page.md![](image.png) We can also utilize the page bundles feature of Hugo to organize the image files together with the Markdown file. To achieve that, turn the my-page.md file into a directory my-page and put the content into a file named index.md, and put the image files inside the my-page directory:\ncontent docs my-page index.md image.png content/docs/my-page/index.md![](image.png) Alternatively, we can also put the image files in the static directory, which will make the images available for all pages:\nstatic images image.png content docs my-page.md Note that the image path begins with a slash / and is relative to the static directory:\ncontent/docs/my-page.md![](/images/image.png)","breadcrumb-navigation#Breadcrumb Navigation":"Breadcrumbs are auto-generated based on the directory structure of /content.\nFor example, consider the file structure demonstrated above. Given that structure, the breadcrumbs atop the page at /docs/guide/organize-files/ would appear automatically as follows:\nDocumentation \u003e Guide \u003e Organize Files","configure-content-directory#Configure Content Directory":"By default, the root content/ directory is used by Hugo to build the site. If you need to use a different directory for content, for example docs/, this can be done by setting the contentDir parameter in the site configuration hugo.yaml.","customizing-breadcrumb-link-titles#Customizing Breadcrumb Link Titles":"By default, each breadcrumb link is generated based on that page‚Äôs title parameter. You can customize this by specifying a linkTitle.\nFor example, if instead of Organize Files we wanted the breadcrumb to be Foo Bar:\ncontent/docs/guide/organize-files.md--- linkTitle: Foo Bar title: Organize Files --- This would now generate the following breadcrumbs:\nDocumentation \u003e Guide \u003e Foo Bar","directory-structure#Directory Structure":"By default, Hugo searches for Markdown files in the content directory, and the structure of the directory determines the final output structure of your website. Take this site as an example:\ncontent _index.md docs _index.md getting-started.md guide _index.md organize-files.md blog _index.md post-1.md Each of the _index.md files is the index page for the corresponding section. The other Markdown files are regular pages.\ncontent ‚îú‚îÄ‚îÄ _index.md // \u003c- / ‚îú‚îÄ‚îÄ docs ‚îÇ ‚îú‚îÄ‚îÄ _index.md // \u003c- /docs/ ‚îÇ ‚îú‚îÄ‚îÄ getting-started.md // \u003c- /docs/getting-started/ ‚îÇ ‚îî‚îÄ‚îÄ guide ‚îÇ ‚îú‚îÄ‚îÄ _index.md // \u003c- /docs/guide/ ‚îÇ ‚îî‚îÄ‚îÄ organize-files.md // \u003c- /docs/guide/organize-files/ ‚îî‚îÄ‚îÄ blog ‚îú‚îÄ‚îÄ _index.md // \u003c- /blog/ ‚îî‚îÄ‚îÄ post-1.md // \u003c- /blog/post-1/","enabling-and-disabling-breadcrumbs#Enabling and Disabling Breadcrumbs":"Whether breadcrumbs are enabled, or disabled, by default for a page, is determined by its content type and page kind:\nContent Type Section Page docs Enabled Enabled blog Disabled Enabled Any other type Disabled Disabled You can override these defaults on a page by setting breadcrumbs in its front matter:\ncontent/docs/guide/organize-files.md--- breadcrumbs: false title: Organize Files --- Similarly you can use cascade to override the defaults on a page and its decendents:\ncontent/portfolio/_index.md--- title: \"Portfolio\" cascade: params: breadcrumbs: true ---","example#Example":"Given the following directory structure:\ncontent _index.md blog _index.md my-blog-series _index.md post-a index.md post-b index.md post-c index.md And the following front matter in the posts:\ncontent/blog/my-blog-series/post-a/index.md--- title: Post A weight: 1 --- content/blog/my-blog-series/post-b/index.md--- title: Post B weight: 2 --- content/blog/my-blog-series/post-c/index.md--- title: Post C weight: 3 --- If the reader is at the bottom of post-b/index.md, they will see that the next page is post-a, and the previous page is post-c. This is due to reversePagination being set to true by default. This is ok when we want our posts to be displayed in chronological order from latest to oldest. However, in the case of a blog series where there are multiple parts, we typically want people to read the first post, and then move to the second and so on. So we want to disable the reversed ordering.\nWe can turn off reversePagination in every blog post in this series by adding the following front matter to my-blog-series/_index.md\ncontent/blog/my-blog-series/_index.md--- title: My Blog Series cascade: params: reversePagination: false --- We are using cascade here to propagate the setting to all posts in the my-blog-series so that reversePagination is set to false for all descendents. This will now ensure that when the reader is on post-b/index.md they will see that the next page is post-c and the previous page is post-a.","layouts#Layouts":"Hextra offers three layouts for different content types:\nLayout Directory Features docs content/docs/ Ideal for structured documentation, same as this section. blog content/blog/ For blog postings, with both listing and detailed article views. default All other directories Single-page article view without sidebar. To customize a section to mirror the behavior of a built-in layout, specify the desired type in the front matter of the section‚Äôs _index.md.\ncontent/my-docs/_index.md--- title: My Docs cascade: type: docs --- The above example configuration ensures that the content files inside content/my-docs/ will be treated as documentation (docs type) by default.","section-navigation#Section Navigation":"","section-pagination-order#Section Pagination Order":"The order in which pages, accessed via PAGE.PrevInSection and PAGE.NextInSection in a page collection, are ordered, is reversed by default.\nTo disable this reversed ordering you can set the reversePagination custom parameter in the page front matter to false. By default reversePagination is set to true.","sidebar-navigation#Sidebar Navigation":"The sidebar navigation is generated automatically based on the content organization alphabetically. To manually configure the sidebar order, we can use the weight parameter in the front matter of the Markdown files.\ncontent/docs/guide/_index.md--- title: Guide weight: 2 --- It is recommended to keep the sidebar not too deep. If you have a lot of content, consider splitting them into multiple sections."},"title":"Organize Files"},"/fredric.net/docs/guide/shortcodes/":{"data":{"":"Hugo Shortcodes are simple snippets inside your content files calling built-in or custom templates.\nHextra provides a collection of beautiful shortcodes to enhance your content.\nCallout Cards Details FileTree Icon Steps Tabs Additional shortcodes provided by Hugo and Hextra:\nJupyter Notebook alpha Others Hextra Asciinema Player"},"title":"Shortcodes"},"/fredric.net/docs/guide/shortcodes/asciinema/":{"data":{"":"","advanced-demo#Advanced Demo":"Here‚Äôs a more advanced example showcasing all available parameters:\n{{\u003c asciinema file=\"demo.cast\" theme=\"dracula\" speed=\"2\" autoplay=\"true\" loop=\"true\" markers=\"1.5:Installation,3.2:Configuration,5.8:Testing\" \u003e}}","basic-usage#Basic Usage":"The asciinema shortcode supports both local .cast files and remote URLs. Here are the different ways to use local files:","how-file-lookup-works#How File Lookup Works":"The shortcode automatically finds your cast files by looking in this order:\nPage bundle resources (if using page bundles) Global assets directory (assets/) Static directory (static/) Remote URLs (if the path starts with http:// or https://) If a file is not found, Hugo will show a helpful error message telling you where to place the file.","local-files#Local Files":"Method 1: Assets directory (recommended) Place your cast files in the assets/ directory of your Hugo site:\nyour-site/ ‚îú‚îÄ‚îÄ assets/ ‚îÇ ‚îî‚îÄ‚îÄ demo.cast ‚îî‚îÄ‚îÄ content/ ‚îî‚îÄ‚îÄ my-page.md In your markdown file:\n{{\u003c asciinema file=\"demo.cast\" \u003e}} Method 2: Static directory Place your cast files in the static/ directory:\nyour-site/ ‚îú‚îÄ‚îÄ static/ ‚îÇ ‚îî‚îÄ‚îÄ demo.cast ‚îî‚îÄ‚îÄ content/ ‚îî‚îÄ‚îÄ my-page.md In your markdown file:\n{{\u003c asciinema file=\"demo.cast\" \u003e}} Method 3: Page bundle For page bundles, place cast files alongside your markdown file:\nyour-site/ ‚îî‚îÄ‚îÄ content/ ‚îî‚îÄ‚îÄ my-page/ ‚îú‚îÄ‚îÄ index.md ‚îî‚îÄ‚îÄ demo.cast In your markdown file:\n{{\u003c asciinema file=\"demo.cast\" \u003e}}","overview#Overview":"The asciinema shortcode allows you to embed terminal recordings created with asciinema in your Hugo site. It provides a rich terminal player with features like playback controls, speed adjustment, and theme customization.","parameters#Parameters":"Parameter Type Default Description file string - Path to the .cast file (required). Supports local files, absolute paths, and remote URLs theme string \"asciinema\" Player theme speed number 1 Playback speed multiplier autoplay boolean false Start playing automatically loop boolean false Loop the recording poster string \"\" Poster (a preview frame) to display until the playback is started. Supports NPT notation (e.g., ‚Äúnpt:1:23‚Äù) markers string \"\" Comma-separated time markers. Format: ‚Äútime:label‚Äù or just ‚Äútime‚Äù (e.g., ‚Äú1.5:Installation,3.2:Configuration,5.8‚Äù)","remote-files#Remote Files":"You can also use cast files from any remote URL:\n{{\u003c asciinema file=\"https://asciinema.org/a/85R4jTtjKVRIYXTcKCNq0vzYH.cast\" \u003e}} {{\u003c asciinema file=\"https://example.com/demo.cast\" \u003e}}"},"title":"Asciinema Player"},"/fredric.net/docs/guide/shortcodes/callout/":{"data":{"":"A built-in component to show important information to the reader.\nNote\nGitHub-style alerts are supported since v0.9.0. It leverages Markdown syntax to render the callout which ensures better portability and readability of the content.","custom-icon#Custom Icon":"A callout is a short piece of text intended to attract attention. {{\u003c callout icon=\"sparkles\" \u003e}} A **callout** is a short piece of text intended to attract attention. {{\u003c /callout \u003e}} A callout is a short piece of text intended to attract attention. {{\u003c callout type=\"important\" icon=\"sparkles\" \u003e}} A **callout** is a short piece of text intended to attract attention. {{\u003c /callout \u003e}}","default#Default":"A callout is a short piece of text intended to attract attention. {{\u003c callout \u003e}} A **callout** is a short piece of text intended to attract attention. {{\u003c /callout \u003e}}","emoji#Emoji":"üåê A callout is a short piece of text intended to attract attention. {{\u003c callout emoji=\"üåê\" \u003e}} A **callout** is a short piece of text intended to attract attention. {{\u003c /callout \u003e}} ‚ÑπÔ∏è A callout is a short piece of text intended to attract attention. {{\u003c callout type=\"info\" emoji=\"‚ÑπÔ∏è\" \u003e}} A **callout** is a short piece of text intended to attract attention. {{\u003c /callout \u003e}}","error#Error":"A callout is a short piece of text intended to attract attention. {{\u003c callout type=\"error\" \u003e}} A **callout** is a short piece of text intended to attract attention. {{\u003c /callout \u003e}}","examples#Examples":"A callout is a short piece of text intended to attract attention. A callout is a short piece of text intended to attract attention. A callout is a short piece of text intended to attract attention. A callout is a short piece of text intended to attract attention. A callout is a short piece of text intended to attract attention.","important#Important":"A callout is a short piece of text intended to attract attention. {{\u003c callout type=\"important\" \u003e}} A **callout** is a short piece of text intended to attract attention. {{\u003c /callout \u003e}}","info#Info":"A callout is a short piece of text intended to attract attention. {{\u003c callout type=\"info\" \u003e}} A **callout** is a short piece of text intended to attract attention. {{\u003c /callout \u003e}}","options#Options":"Parameter Description type The type of callout. (default, info, warning, error, important) emoji The emoji to show before the callout. icon The icon to show before the callout. (related to type or can be a custom icon).","warning#Warning":"A callout is a short piece of text intended to attract attention. {{\u003c callout type=\"warning\" \u003e}} A **callout** is a short piece of text intended to attract attention. {{\u003c /callout \u003e}}"},"title":"Callout"},"/fredric.net/docs/guide/shortcodes/cards/":{"data":{"":"","card-parameters#Card Parameters":"Parameter Description link URL (internal or external). title Title heading for the card. subtitle Subtitle heading (supports Markdown). icon Name of the icon. See icons for more information.","columns#Columns":"You can specify the maximum number of columns for cards to span by passing the cols parameter to the cards shortcode. Note that columns will still be collapsed on smaller screens.\nTop Card Bottom Card Left Card Right Card {{\u003c cards cols=\"1\" \u003e}} {{\u003c card link=\"/\" title=\"Top Card\" \u003e}} {{\u003c card link=\"/\" title=\"Bottom Card\" \u003e}} {{\u003c /cards \u003e}} {{\u003c cards cols=\"2\" \u003e}} {{\u003c card link=\"/\" title=\"Left Card\" \u003e}} {{\u003c card link=\"/\" title=\"Right Card\" \u003e}} {{\u003c /cards \u003e}}","example#Example":"Callout Card with tag custom tag No Icon Image CardInternet Image Local ImageRaw image under static directory. Local ImageImage under assets directory, processed by Hugo.","image-card#Image Card":"Additionally, the card supports adding image and processing through these parameters:\nParameter Description image Specifies the image URL for the card. method Sets Hugo‚Äôs image processing method. options Configures Hugo‚Äôs image processing options. imageStyle Used to fill the style attribute of the image tag. Card supports three kinds of images:\nRemote image: the full URL in the image parameter. Static image: use the relative path in Hugo‚Äôs static/ directory. Processed image: use the relative path in Hugo‚Äôs assets/ directory. Hextra auto-detects if image processing is needed during build and applies the options parameter or default settings (Resize, 800x, Quality 80, WebP Format). It currently supports these method: Resize, Fit, Fill and Crop.\nFor more on Hugo‚Äôs built in image processing commands, methods, and options see their Image Processing Documentation.","tags#Tags":"Card supports adding tags which could be useful to show extra status information.\nParameter Description tag Text in tag. tagColor Color of the tag. See badges for more information. tagIcon Icon of the tag. See badges for more information. tagBorder Border of the tag. See badges for more information. Card with default tag tag text Card with red tag tag text Card with blue tag tag text Card with yellow tag tag text Image CardImage tag text Image CardImage tag text {{\u003c cards \u003e}} {{\u003c card link=\"../callout\" title=\"Card with default tag color\" tag=\"tag text\" \u003e}} {{\u003c card link=\"../callout\" title=\"Card with red tag\" tag=\"tag text\" tagColor=\"red\" \u003e}} {{\u003c card link=\"../callout\" title=\"Card with blue tag\" tag=\"tag text\" tagColor=\"blue\" \u003e}} {{\u003c card link=\"../callout\" title=\"Card with yellow tag\" tag=\"tag text\" tagColor=\"yellow\" tagIcon=\"sparkles\" tagBorder=false \u003e}} {{\u003c card link=\"/\" title=\"Image Card\" image=\"/images/card-image-unprocessed.jpg\" subtitle=\"Image\" tag=\"tag text\" tagColor=\"green\" \u003e}} {{\u003c card link=\"/\" title=\"Image Card\" image=\"images/space.jpg\" subtitle=\"Image\" tag=\"tag text\" tagColor=\"purple\" tagIcon=\"sparkles\" tagBorder=false \u003e}} {{\u003c /cards \u003e}}","usage#Usage":"{{\u003c cards \u003e}} {{\u003c card link=\"../callout\" title=\"Callout\" icon=\"warning\" \u003e}} {{\u003c card link=\"../callout\" title=\"Card with tag\" icon=\"tag\" tag= \"A custom tag\" \u003e}} {{\u003c card link=\"/\" title=\"No Icon\" \u003e}} {{\u003c /cards \u003e}} {{\u003c cards \u003e}} {{\u003c card link=\"/\" title=\"Image Card\" image=\"https://source.unsplash.com/featured/800x600?landscape\" subtitle=\"Unsplash Landscape\" \u003e}} {{\u003c card link=\"/\" title=\"Local Image\" image=\"/images/card-image-unprocessed.jpg\" subtitle=\"Raw image under static directory.\" \u003e}} {{\u003c card link=\"/\" title=\"Local Image\" image=\"images/space.jpg\" subtitle=\"Image under assets directory, processed by Hugo.\" method=\"Resize\" options=\"600x q80 webp\" \u003e}} {{\u003c /cards \u003e}}"},"title":"Cards"},"/fredric.net/docs/guide/shortcodes/details/":{"data":{"":"A built-in component to display a collapsible content.","example#Example":"Details This is the content of the details.\nMarkdown is supported.\nClick me to reveal This will be hidden by default.","usage#Usage":"{{\u003c details title=\"Details\" \u003e}} This is the content of the details. Markdown is **supported**. {{\u003c /details \u003e}} {{\u003c details title=\"Click me to reveal\" closed=\"true\" \u003e}} This will be hidden by default. {{\u003c /details \u003e}}"},"title":"Details"},"/fredric.net/docs/guide/shortcodes/filetree/":{"data":{"":"","example#Example":"content _index.md docs _index.md introduction.md introduction.fr.md hugo.toml","filetreefile#\u003ccode\u003efiletree/file\u003c/code\u003e":"Parameter Description name The name of the file.","filetreefolder#\u003ccode\u003efiletree/folder\u003c/code\u003e":"Parameter Description name The name of the file. state The state of the file. Can be open or closed. Default is open.","options#Options":"","usage#Usage":"Markdown{{\u003c filetree/container \u003e}} {{\u003c filetree/folder name=\"content\" \u003e}} {{\u003c filetree/file name=\"_index.md\" \u003e}} {{\u003c filetree/folder name=\"docs\" state=\"closed\" \u003e}} {{\u003c filetree/file name=\"_index.md\" \u003e}} {{\u003c filetree/file name=\"introduction.md\" \u003e}} {{\u003c filetree/file name=\"introduction.fr.md\" \u003e}} {{\u003c /filetree/folder \u003e}} {{\u003c /filetree/folder \u003e}} {{\u003c filetree/file name=\"hugo.toml\" \u003e}} {{\u003c /filetree/container \u003e}}"},"title":"FileTree"},"/fredric.net/docs/guide/shortcodes/hextra/":{"data":{"":"The main usage of these shortcodes are within the layout hextra-home.","hextrafeature-card#\u003ccode\u003ehextra/feature-card\u003c/code\u003e":"A shortcode for displaying a feature card.","hextrafeature-grid#\u003ccode\u003ehextra/feature-grid\u003c/code\u003e":"A shortcode for displaying a feature grid.","hextrahero-badge#\u003ccode\u003ehextra/hero-badge\u003c/code\u003e":"A shortcode for rendering a badge with a link.","hextrahero-button#\u003ccode\u003ehextra/hero-button\u003c/code\u003e":"A shortcode for rendering a button with a link.","hextrahero-container#\u003ccode\u003ehextra/hero-container\u003c/code\u003e":"A simple hero container with an image on the left side.","hextrahero-headline#\u003ccode\u003ehextra/hero-headline\u003c/code\u003e":"A shortcode for displaying a hero headline.","hextrahero-section#\u003ccode\u003ehextra/hero-section\u003c/code\u003e":"A simple hero section with a heading and optional style.","hextrahero-subtitle#\u003ccode\u003ehextra/hero-subtitle\u003c/code\u003e":"A shortcode for displaying a hero subtitle.","options#Options":"Parameter Description title The title of the card. subtitle The subtitle of the card. class The class of the card. image The image of the card. imageClass The class of the image. style The style of the card. icon The icon of the card. link The link of the card.","options-1#Options":"Parameter Description cols The number of columns. style The style of the grid.","options-2#Options":"Parameter Description link The link of the badge. class The class of the badge. style The style of the badge.","options-3#Options":"Parameter Description link The link of the button. text The text of the button. style The style of the button.","options-4#Options":"Parameter Description class The class of the container. cols The number of columns (default: 2). image The image of the container. imageCard Whether to display the image as a card (default: false). imageClass The class of the image. imageLink The link of the image. imageStyle The style of the image. imageTitle The title of the image. imageWidth The width of the image (default: 350). imageHeight The height of the image (default: 350). style The style of the container.","options-5#Options":"Parameter Description style The style of the headline.","options-6#Options":"Parameter Description heading The heading level (default: h2). style The style of the heading. content The content of the heading.","options-7#Options":"Parameter Description style The style of the subtitle.","usage#Usage":"{{\u003c hextra/feature-card title=\"Title\" subtitle=\"Subtitle\" \u003e}}","usage-1#Usage":"{{\u003c hextra/feature-grid cols=\"3\" \u003e}} {{\u003c hextra/feature-card title=\"One\" \u003e}} {{\u003c hextra/feature-card title=\"Two\" \u003e}} {{\u003c hextra/feature-card title=\"Three\" \u003e}} {{\u003c /hextra/feature-grid \u003e}}","usage-2#Usage":"{{\u003c hextra/hero-badge \u003e}} Free, open source {{\u003c icon name=\"arrow-circle-right\" attributes=\"height=14\" \u003e}} {{\u003c /hextra/hero-badge \u003e}}","usage-3#Usage":"{{\u003c hextra/hero-button text=\"Get Started\" link=\"/docs\" \u003e}}","usage-4#Usage":"{{\u003c hextra/hero-container image=\"images/logo.svg\" imageTitle=\"title\" \u003e}} Content {{\u003c /hextra/hero-container \u003e}}","usage-5#Usage":"{{\u003c hextra/hero-headline \u003e}} Build modern websites¬†with Markdown and Hugo {{\u003c /hextra/hero-headline \u003e}}","usage-6#Usage":"{{\u003c hextra/hero-section heading=\"h3\" \u003e}}Title{{\u003c /hextra/hero-section \u003e}}\u003e","usage-7#Usage":"{{\u003c hextra/hero-subtitle \u003e}} Fast, batteries-included Hugo theme¬†for creating beautiful static websites {{\u003c /hextra/hero-subtitle \u003e}}"},"title":"Hextra"},"/fredric.net/docs/guide/shortcodes/icon/":{"data":{"":"To use this shortcode inline, inline shortcode needs to be enabled in the config:\nhugo.yamlenableInlineShortcodes: true List of available icons can be found in data/icons.yaml.","example#Example":"","how-to-add-your-own-icons#How to add your own icons":"Create data/icons.yaml file, then add your own SVG icons in the following format:\ndata/icons.yamlyour-icon: your icon svg content It then can be used in the shortcode like this:\n{{\u003c icon \"your-icon\" \u003e}} {{\u003c card icon=\"your-icon\" \u003e}} Tip: Iconify Design is a great place to find SVG icons for your site.","options#Options":"Name Description name Icon name attributes The attributes of the icon.","usage#Usage":"{{\u003c icon \"github\" \u003e}} Heroicons v1 outline icons are available out of the box."},"title":"Icon"},"/fredric.net/docs/guide/shortcodes/others/":{"data":{"":"Some of these are Hugo built-in shortcodes. These shortcodes are considered less stable and may be changed anytime.","badge#Badge":"","colors#Colors":"Badge Badge Badge Badge Badge Badge Badge Badge Badge {{\u003c badge content=\"Badge\" \u003e}} {{\u003c badge content=\"Badge\" color=\"purple\" \u003e}} {{\u003c badge content=\"Badge\" color=\"indigo\" \u003e}} {{\u003c badge content=\"Badge\" color=\"blue\" \u003e}} {{\u003c badge content=\"Badge\" color=\"green\" \u003e}} {{\u003c badge content=\"Badge\" color=\"yellow\" \u003e}} {{\u003c badge content=\"Badge\" color=\"amber\" \u003e}} {{\u003c badge content=\"Badge\" color=\"orange\" \u003e}} {{\u003c badge content=\"Badge\" color=\"red\" \u003e}} Badge Badge Badge Badge Badge Badge Badge Badge Badge {{\u003c badge content=\"Badge\" border=false \u003e}} {{\u003c badge content=\"Badge\" color=\"purple\" border=false \u003e}} {{\u003c badge content=\"Badge\" color=\"indigo\" border=false \u003e}} {{\u003c badge content=\"Badge\" color=\"blue\" border=false \u003e}} {{\u003c badge content=\"Badge\" color=\"green\" border=false \u003e}} {{\u003c badge content=\"Badge\" color=\"yellow\" border=false \u003e}} {{\u003c badge content=\"Badge\" color=\"amber\" border=false \u003e}} {{\u003c badge content=\"Badge\" color=\"orange\" border=false \u003e}} {{\u003c badge content=\"Badge\" color=\"red\" border=false \u003e}}","default#Default":"Badge {{\u003c badge \"Badge\" \u003e}}","examples#Examples":"default border color link icon","options#Options":"Name Description content The text of the badge. link The link of the badge. icon The icon of the badge. color The color of the badge. gray (default), purple, indigo, blue, green, yellow, amber, orange, red. class The class of the badge. border Adds or removes the border (default: true).","pdf#PDF":"With PDF shortcode, you can embed a PDF file in your content.\n{{\u003c pdf \"https://example.com/sample.pdf\" \u003e}} You can also place the PDF file in your project directory and use the relative path.\n{{\u003c pdf \"path/to/file.pdf\" \u003e}} Example:","usage#Usage":"","variants#Variants":"Badge Releases {{\u003c badge content=\"Badge\" icon=\"sparkles\" \u003e}} {{\u003c badge content=\"Releases\" link=\"https://github.com/imfing/hextra/releases\" icon=\"github\" \u003e}}","youtube#YouTube":"Embed a YouTube video.\n{{\u003c youtube VIDEO_ID \u003e}} Result:\nFor more information, see Hugo‚Äôs YouTube Shortcode."},"title":"Others"},"/fredric.net/docs/guide/shortcodes/steps/":{"data":{"":"","example#Example":"","step-1#Step 1":"","step-2#Step 2":"","step-3#Step 3":"This is the third step.","step-subheading#Step subheading":"A built-in component to display a series of steps.\nYou can use the Markdown attribute {class=\"no-step-marker\"} to prevent a heading from being counted as a step.\nExample Step 1 This is the first step.\nStep 2 This is the second step.\nStep subheading This will not be counted as a step.","usage#Usage":"Please note that this shortcode is intended only for Markdown content. If you put HTML content or other shortcodes as step content, it may not render as expected. Put Markdown h3 header within steps shortcode.\n{{% steps %}} ### Step 1 This is the first step. ### Step 2 This is the second step. #### Step subheading {class=\"no-step-marker\"} This will not be counted as a step. {{% /steps %}}"},"title":"Steps"},"/fredric.net/docs/guide/shortcodes/tabs/":{"data":{"":"","default#Default":"{{\u003c tabs \u003e}} {{\u003c tab name=\"JSON\" \u003e}}**JSON**: JavaScript Object Notation (JSON) is a standard text-based format for representing structured data based on JavaScript object syntax.{{\u003c /tab \u003e}} {{\u003c tab name=\"YAML\" \u003e}}**YAML**: YAML is a human-readable data serialization language.{{\u003c /tab \u003e}} {{\u003c tab name=\"TOML\" \u003e}}**TOML**: TOML aims to be a minimal configuration file format that's easy to read due to obvious semantics.{{\u003c /tab \u003e}} {{\u003c /tabs \u003e}}","example#Example":"JSONYAMLTOML JSON: JavaScript Object Notation (JSON) is a standard text-based format for representing structured data based on JavaScript object syntax.YAML: YAML is a human-readable data serialization language.TOML: TOML aims to be a minimal configuration file format that‚Äôs easy to read due to obvious semantics.","specify-selected-tab#Specify Selected Tab":"Use selected property to specify the selected tab.\n{{\u003c tabs \u003e}} {{\u003c tab name=\"JSON\" \u003e}}**JSON**: JavaScript Object Notation (JSON) is a standard text-based format for representing structured data based on JavaScript object syntax.{{\u003c /tab \u003e}} {{\u003c tab name=\"YAML\" selected=true \u003e}}**YAML**: YAML is a human-readable data serialization language.{{\u003c /tab \u003e}} {{\u003c tab name=\"TOML\" \u003e}}**TOML**: TOML aims to be a minimal configuration file format that's easy to read due to obvious semantics.{{\u003c /tab \u003e}} {{\u003c /tabs \u003e}} The YAML tab will be selected by default.\nJSONYAMLTOML JSON: JavaScript Object Notation (JSON) is a standard text-based format for representing structured data based on JavaScript object syntax.YAML: YAML is a human-readable data serialization language.TOML: TOML aims to be a minimal configuration file format that‚Äôs easy to read due to obvious semantics.","sync-tabs#Sync Tabs":"Tabs with the same list of items can be synchronized. When enabled, selecting a tab updates all other tabs with the same items and remembers the selection across pages.\nEnable/disable globally in your hugo.yaml under the page section:\nhugo.yamlparams: page: tabs: sync: true Enable/disable per page inside the front matter:\nmy_page.md--- title: My page params: tabs: sync: true --- Example content. With this enabled, the following two tab blocks will always display the same selected item:\n{{\u003c tabs \u003e}} {{\u003c tab name=\"A\" \u003e}}A content{{\u003c /tab \u003e}} {{\u003c tab name=\"B\" \u003e}}B content{{\u003c /tab \u003e}} {{\u003c /tabs \u003e}} {{\u003c tabs \u003e}} {{\u003c tab name=\"A\" \u003e}}Second A content{{\u003c /tab \u003e}} {{\u003c tab name=\"B\" \u003e}}Second B content{{\u003c /tab \u003e}} {{\u003c /tabs \u003e}}","usage#Usage":"","use-markdown#Use Markdown":"Markdown syntax including code block is also supported:\n{{\u003c tabs \u003e}} {{\u003c tab name=\"JSON\" \u003e}} ```json { \"hello\": \"world\" } ``` {{\u003c /tab \u003e}} ... add other tabs similarly {{\u003c /tabs \u003e}} JSONYAMLTOML { \"hello\": \"world\" } hello: world hello = \"world\""},"title":"Tabs"},"/fredric.net/docs/guide/syntax-highlighting/":{"data":{"":"Hugo uses Chroma, a general purpose syntax highlighter in pure Go, for syntax highlighting. It is recommended to use backticks for code blocks in Markdown content. For example:\nMarkdown```python def say_hello(): print(\"Hello!\") ``` will be rendered as:\ndef say_hello(): print(\"Hello!\")","copy-button#Copy Button":"By default, copy button is enabled for code blocks. Its behavior can changed by modifying the site configuration file:\nhugo.yaml 42 43 44 45 46 47 params: highlight: copy: enable: true # hover | always display: hover","features#Features":"","filename#Filename":"To add a filename or title to the code block, set attribute filename:\nMarkdown```python {filename=\"hello.py\"} def say_hello(): print(\"Hello!\") ``` hello.pydef say_hello(): print(\"Hello!\")","highlighting-lines#Highlighting Lines":"To highlight lines, set attribute hl_lines to a list of line numbers:\nMarkdown```python {linenos=table,hl_lines=[2,4],linenostart=1,filename=\"hello.py\"} def say_hello(): print(\"Hello!\") def main(): say_hello() ``` hello.py 1 2 3 4 5 def say_hello(): print(\"Hello!\") def main(): say_hello()","line-numbers#Line Numbers":"To set line numbers, set attribute linenos to table and optionally set linenostart to the starting line number:\nMarkdown```python {linenos=table,linenostart=42} def say_hello(): print(\"Hello!\") ``` 42 43 def say_hello(): print(\"Hello!\")","link-to-file#Link to File":"You can use the base_url attribute to provide a base URL that will be combined with the file name to generate a link.\nThe file name can include a relative path if it specifies the file‚Äôs location within the base path.\nMarkdown```go {base_url=\"https://github.com/imfing/hextra/blob/main/\",filename=\"docs/hugo.work\"} go 1.20 ``` docs/hugo.workgo 1.20","supported-languages#Supported Languages":"For a list of supported languages, please see the Chroma documentation."},"title":"Syntax Highlighting"},"/fredric.net/showcase/":{"data":{"":"Beginner Privacy Clace Regolith Desktop Model Context Protocol Specification cellular_raza Sidekick Install C AXIVO Docs Stanford CS 40 Helix Docs Clever Cloud Documentation OWASP AI Security and Privacy Guide Osuny Porter HITSZ OpenAuto LutheranConfessions Hextra Starter Template"},"title":"Showcase"}}